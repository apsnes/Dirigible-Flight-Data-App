@using FlightAppFrontend.Shared.Extensions
@using FlightAppLibrary.Models.Dtos
@using FlightAppLibrary.Models.Response
@inject IHttpClientFactory ClientFactory

<div class="card">
    <header class="card-header is-clickable pb-4 mt-5" @onclick="ToggleCard" style="cursor: pointer">
        <p class="card-header-title">Flight Comments</p>
        <button class="card-header-icon" aria-label="more options">
            @if (IsCardOpen)
            {
                <span class="icon"><i class="fas fa-angle-up" aria-hidden="true"></i></span>
            }
            else
            {
                <span class="icon"><i class="fas fa-angle-down" aria-hidden="true"></i></span>
            }
        </button>
    </header>

    @if (IsCardOpen)
    {
        <div class="card-content">
            <AddNoteCard FlightResponse="FlightResponse" OnNoteAdded="HandleNotesChanged" />
            <div class="media">
                <div class="media-content">
                    @foreach (var note in Notes)
                    {
                        <IndividualNoteCard Note="note" />
                    }
                </div>
            </div>
        </div>
    }
</div>

@code
{
    [Parameter] public List<NoteDto> Notes { get; set; }
    [Parameter] public FlightResponse FlightResponse { get; set; }
    private bool IsCardOpen = false;

    private void ToggleCard()
    {
        IsCardOpen = !IsCardOpen;
    }

    private async Task HandleNotesChanged(NoteDto note)
    {
        if (note.User!.DisplayName == null) note.User.DisplayName = note.User.FirstName;
        Notes.Add(note);
    }
}
