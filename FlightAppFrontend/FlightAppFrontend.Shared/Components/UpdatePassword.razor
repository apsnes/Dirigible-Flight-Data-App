@using FlightAppFrontend.Shared.Components.Utility
@using FlightAppFrontend.Shared.Services
@using FlightAppLibrary.Models.Dtos
@using System.Text.Json
@using System.Text
@inject IHttpClientFactory DirigibleApi
@inject IJsInteropService JsInteropService
<h3>ResetPassword</h3>



<div class="card mb-5 pb-4">
    <div class="card-content">
        <div class="media">
            <div class="media-left">
                <figure class="image is-128x128 is-square">
                    <img class="is-rounded" src="https://upload.wikimedia.org/wikipedia/commons/thumb/b/bd/Color_icon_blue.svg/1200px-Color_icon_blue.svg.png" alt="user-avatar" />
                </figure>
            </div>
            <div class="media-content">
                <ErrorMessage Message="@ErrorMessage" OnDeleteNotification="ResetError" />
                <SuccessMessage Message="@SuccessMessage" OnDeleteNotification="ResetSuccess" />
                
                <EditForm FormName="loginForm" Model="passwordChangeModel" OnValidSubmit="HandleValidSubmit" OnInvalidSubmit="HandleInvalidSubmit" aria-label="Login Form">
                    <DataAnnotationsValidator />

                    <div class="field">
                        <label for="password" class="label">Password</label>
                        <div class="control mt-2">
                            <InputText type="password" id="password" class="input is-warning" @bind-Value="passwordChangeModel.Password" placeholder="Password" />
                            <ValidationMessage class="help is-danger" For="@(() => passwordChangeModel.Password)" />
                        </div>
                    </div>

                    <div class="field">
                        <label for="confirmPassword" class="label">Confirm Password</label>
                        <div class="control mt-2">
                            <InputText type="password" id="confirmPassword" class="input is-warning" @bind-Value="passwordChangeModel.ConfirmPassword" placeholder="Confirm Password" />
                            <ValidationMessage class="help is-danger" For="@(() => passwordChangeModel.ConfirmPassword)" />
                        </div>
                    </div>

                    <MainButton Text="Update" />
                </EditForm>
            </div>
        </div>
    </div>
</div>

@code {

    private PasswordUpdateDto passwordChangeModel = new PasswordUpdateDto();
    private string? ErrorMessage;
    private string? SuccessMessage;

    private async void HandleValidSubmit()
    {
        var client = DirigibleApi.CreateClient("DirigibleApi");
        var content = new StringContent(JsonSerializer.Serialize(passwordChangeModel), Encoding.UTF8, "application/json");
        var result = await client.PutAsync("Account/UpdatePassword", content);
        if (result.IsSuccessStatusCode)
        {
            SuccessMessage = "Password Updated Successfully";

        }
        else{

            ErrorMessage = "Password Update failed";
        }
        passwordChangeModel.Password = "";
        passwordChangeModel.ConfirmPassword = "";
        StateHasChanged();
    }
    private void HandleInvalidSubmit()
    {
        ErrorMessage = "Invalid submission";
    }
    private void ResetError()
    {
        ErrorMessage = null;
    }
    private void ResetSuccess()
    {
        SuccessMessage = null;
    }

}
