@using System.ComponentModel.DataAnnotations
@using FlightAppFrontend.Shared.Components.Utility
@using FlightAppLibrary.Models.Dtos
@using System.Text.Json
@using System.Text
@inject IHttpClientFactory DirigibleApi

<div class="container">
    <div class="columns is-centered">
        <div class="column is-one-third is-offset-one-third">

            ﻿<Title Text="Login"/>

            <EditForm FormName="loginForm" Model="LoginModel" OnValidSubmit="HandleValidSubmit" OnInvalidSubmit="HandleInvalidSubmit" aria-label="Login Form">
                <DataAnnotationsValidator />

                <div class="field">
                    <label for="email" class="label">Email</label>
                    <div class="control mt-2">
                        <InputText id="email" class="input is-warning" @bind-Value="LoginModel.UserName" placeholder="Email" />
                        <ValidationMessage class="help is-danger" For="@(() => LoginModel.UserName)" />
                    </div>
                </div>

                <div class="field">
                    <label for="password" class="label">Password</label>
                    <div class="control mt-2">
                        <InputText type="password" id="password" class="input is-warning" @bind-Value="LoginModel.Password" placeholder="Password" />
                        <ValidationMessage class="help is-danger" For="@(() => LoginModel!.Password)" />
                    </div>
                </div>

                <button type="submit" class="button is-warning mt-2">Login</button>
            </EditForm>
            <div class="mt-2">
                <a class="has-text-white is-underlined" href="/Registration">Register</a>
            </div>
        </div>
    </div>
</div>


@code {
    private string? Email { get; set; }
    private string? Password { get; set; }
    //private UserLoginModel LoginModel = new UserLoginModel();
    private SignInRequestDTO LoginModel = new SignInRequestDTO();

    private async Task HandleValidSubmit()
    {
        var client = DirigibleApi.CreateClient("DirigibleApi");
        var content = new StringContent(JsonSerializer.Serialize(LoginModel), Encoding.UTF8, "application/json");
        var result = await client.PostAsync("Account/SignIn", content);
        if(result.IsSuccessStatusCode){
            Console.WriteLine("Login successful");
        }
        else{
            Console.WriteLine("Login failed");
        }

    }
    private void HandleInvalidSubmit()
    {
        Console.WriteLine("OnInvalidSubmit");
    }
    public class UserLoginModel
    {
        [Required(ErrorMessage = "Please enter an email")]
        public string Email { get; set; }

        [Required(ErrorMessage = "Please enter a password")]
        public string Password { get; set; }
    }

}
