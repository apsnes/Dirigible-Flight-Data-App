@using FlightAppFrontend.Shared.Auth
@using Microsoft.AspNetCore.Components.Authorization
@inject TokenStateService tokenStateService
@inject NavigationManager NavigationManager
@inject TokenService TokenService
@inject AuthenticationStateProvider authenticationStateProvider
<nav class="navbar is-warning" role="navigation" aria-label="main navigation">
    <div class="navbar-brand">
        <a class="navbar-item" href="/">
            <image src="_content/FlightAppFrontend.Shared/Images/dirigible-navbar.png" alt="dirigible-logo"/>
        </a>
        <a role="button" class="navbar-burger @IsActive" aria-label="menu" aria-expanded="false" @onclick="()=>ToggleHamburger()">
            <span aria-hidden="true"></span>
            <span aria-hidden="true"></span>
            <span aria-hidden="true"></span>
            <span aria-hidden="true"></span>
        </a>
    </div>

    <div class="navbar-menu @IsActive">
        <div class="navbar-start">

            <a class="navbar-item" href="/dashboard">
                Dashboard
            </a>

            <a class="navbar-item" href="/search">
                Search
            </a>

            <a class="navbar-item" href="/health">
                Health
            </a>

            <div class="navbar-item has-dropdown is-hoverable">
                <a class="navbar-link">
                    More
                </a>
                <div class="navbar-dropdown">
                    <a class="navbar-item" href="/about">
                        About
                    </a>
                    <a class="navbar-item" href="/admin">
                        Admin
                    </a>
                    <hr class="navbar-divider">
                    <a class="navbar-item" href="/report-issue">
                        Report an Issue
                    </a>
                </div>
            </div>
        </div>

        <div class="navbar-end">
            <div class="navbar-item">
                <div class="buttons">

                    <AuthorizeView>
                        <NotAuthorized>
                            <a class="button is-link is-dark" href="/registration">
                                <strong>Sign up</strong>
                            </a>
                            <a class="button is-warning is-dark" href="/login">
                                Log in
                            </a>
                        </NotAuthorized>
                        <Authorized>
                            <button class="button" @onclick="Logout">Logout</button>
                        </Authorized>
                    </AuthorizeView>



                </div>
            </div>
        </div>
    </div>
</nav>

@code {
    protected string? IsActive { get; set; }

    protected override void OnInitialized()
    {
        IsActive = "";
    }

    private void ToggleHamburger()
    {
        IsActive = IsActive is "" ? "is-active" : "";
    }
    private async Task Logout()
    {
        await tokenStateService.SetTokenAsync(null);
        TokenService.RemoveTokenAsync();
        if (authenticationStateProvider is CustomAuthenticationStateProvider customProvider){
            customProvider.NotifyAuthenticationStateChanged();
        }
        this.StateHasChanged();
        NavigationManager.NavigateTo("/");
    }
}
