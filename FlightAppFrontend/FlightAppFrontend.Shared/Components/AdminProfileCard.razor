@using FlightAppFrontend.Shared.Extensions
@using FlightAppFrontend.Shared.Services
@using FlightAppLibrary.Models.Dtos
@using Microsoft.AspNetCore.Components.Authorization
@inject IHttpClientFactory ClientFactory

<div class="card mb-5 pb-4">
    <div class="card-content">
        <div class="media">
            <div class="media-left">
                <figure class="image is-128x128 is-square">
                    <img class="is-rounded" src="https://upload.wikimedia.org/wikipedia/commons/thumb/b/bd/Color_icon_blue.svg/1200px-Color_icon_blue.svg.png" alt="user-avatar" />
                </figure>
            </div>
            <div class="media-content">
                <p class="is-size-3 has-text-weight-bold"><strong>@($"{AppUser!.FirstName} {AppUser!.LastName}")</strong></p>
                <p class="is-size-4">@AppUser!.DisplayName <small>@AppUser!.Pronouns</small></p>
                <p class="is-size-4">@Password <small>@Password</small></p>
                <p class="is-size-4">@ConfirmPassword <small>@ConfirmPassword</small></p>

            </div>
        </div>
    </div>
    <footer class="card-footer">
        <button type="button" class="card-footer-item has-text-warning" @onclick="() => Edit()">Edit Details</button>
        <button type="button" class="card-footer-item has-text-warning" @onclick="() => ChangePassword()">Change Password</button>
    </footer>
</div>

@code {
    [CascadingParameter]
    private Task<AuthenticationState>? AuthenticationStateTask { get; set; }

    [Parameter]
    public AuthenticationState? AuthState { get; set; }

    [Parameter]
    public UserDTO? AppUser { get; set; }

    [Parameter]
    public EventCallback OnEdit { get; set; }

    [Parameter]
    public EventCallback OnChangePassword { get; set; }
    [Parameter]
    public string Password { get; set; }
    [Parameter]
    public string ConfirmPassword { get; set; }



    protected async Task Edit()
    {
        await OnEdit.InvokeAsync();
    }

    protected async Task ChangePassword()
    {
        await OnChangePassword.InvokeAsync();
    }
}