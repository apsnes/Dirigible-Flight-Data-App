@using FlightAppFrontend.Shared.Extensions
@using FlightAppLibrary.Models.Response
@using System.Web
@inject IHttpClientFactory ClientFactory


@if (MapUri != null)
{
    <MapCard FlightResponse="@FlightResponse" MapUri="@MapUri"/>
}
}

@code {

    [Parameter]
    public FlightResponse? FlightResponse { get; set; }
    //create url
    private string ErrorMessage;
    public string MapUri;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var client = ClientFactory.CreateClient("MapData");

            var mapBuilder = new UriBuilder(client.BaseAddress!.ToString());
            var mapQuery = HttpUtility.ParseQueryString(mapBuilder.Query);
            mapQuery["center"] = $"lonlat:{FlightResponse.Live.Longitude},{FlightResponse.Live.Latitude}";
            mapBuilder.Query = mapQuery.ToString();
            MapUri = mapBuilder.Uri.AbsoluteUri;
            MapUri += $"&marker=lonlat:{FlightResponse.Live.Longitude},{FlightResponse.Live.Latitude};icontype:awesome;shadow:no;color:%23ffff00;icon:plane";

            // MapUri = mapBuilder.Uri.ToString();


            client.Dispose();

        }
        catch (Exception ex)
        {
            ErrorMessage = $"An error occured: {ex.Message}";
        }

    }
}
