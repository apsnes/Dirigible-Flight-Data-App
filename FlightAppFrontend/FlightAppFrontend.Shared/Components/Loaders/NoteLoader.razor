@using FlightAppFrontend.Shared.Components.Utility
@using FlightAppFrontend.Shared.Extensions
@using FlightAppLibrary.Models.Dtos
@using FlightAppLibrary.Models.Response
@inject IHttpClientFactory ClientFactory

@if (Notes == null)
{
    <Loading />
}
else
{
    <FlightNotesCard Notes="@Notes" IsCardOpen="false"/>
}

@code
{
    [Parameter] public FlightResponse FlightResponse { get; set; }
    public List<NoteDto> Notes { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var client = ClientFactory.CreateClient("DirigibleApi");
        string url = $"Notes/flight?flight_iata={FlightResponse.Flight.Iata}&departure_time={FlightResponse.Departure.Scheduled.ToString()}";
        var response = await client.GetValueAsync<List<NoteDto>>(url);
        Notes = response.Value;
    }  
}
