@using System.Text.Json
@using FlightAppFrontend.Shared.Components.Utility
@using FlightAppFrontend.Shared.Extensions
@using FlightAppLibrary.Models.Response
@inject IHttpClientFactory ClientFactory

@if(ErrorMessage != null)
{
    <ErrorMessage Message="@ErrorMessage"/>
}
else if(@FlightResponses == null)
{
    <Loading/>
}
else
{
    <FlightsSummary FlightResponses="@FlightResponses"/>
}

@code {
    [Parameter]
    public string? ArrivalIATA { get; set; }

    [Parameter]
    public string? DepartureIATA { get; set; }


    protected List<FlightResponse>? FlightResponses { get; set; }

    protected string? ErrorMessage;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var client = ClientFactory.CreateClient("DirigibleApi");

            var test = client.BaseAddress;

            var response = await client.GetValueAsync<List<FlightResponse>>($"api/FlightApi/route/{DepartureIATA}/{ArrivalIATA}");

            FlightResponses = response.Value;
            ErrorMessage = response.ErrorMessage;
        }
        catch (Exception ex)
        {
            ErrorMessage = $"An error occured: {ex.Message}";
        }
    }
}