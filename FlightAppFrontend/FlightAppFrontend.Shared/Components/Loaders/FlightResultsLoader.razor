@using System.Text.Json
@using FlightAppFrontend.Shared.Components.Utility
@using FlightAppFrontend.Shared.Extensions
@using FlightAppLibrary.Models.Response
@inject IHttpClientFactory ClientFactory

@if(ErrorMessage != null) 
{ 
    <ErrorMessage Message="@ErrorMessage" OnDeleteNotification="ResetError"/> 
} 
else if(@FlightResponses == null) 
{ 
    <Loading/> 
} 
else 
{ 
    <FlightsSummary FlightResponses="@FlightResponses"/> 
} 

@code {
    [Parameter]
    public string? FlightIATA { get; set; }

    [Parameter]
    public string? ArrivalIATA { get; set; }

    [Parameter]
    public string? DepartureIATA { get; set; }

    [Parameter]
    public string? Date { get; set; }

    [Parameter]
    public int PageNumber { get; set; }

    [Parameter]
    public int PageSize { get; set; }

    public List<FlightResponse>? FlightResponses { get; set; }

    protected string? ErrorMessage;

    protected override async Task OnInitializedAsync()
    {
        try
        {      
            var client = ClientFactory.CreateClient("DirigibleApi");
            var response = await client.GetValueAsync<List<FlightResponse>>($"FlightApi/results?{CreateQueryString()}");

            // var response = JsonSerializer.Deserialize<FlightResponseWrapper>(File.ReadAllText("..\\..\\FlightApp\\test_flight_json.json")).Data;

            // FlightResponses = response.ToList();

            FlightResponses = response.Value;
            ErrorMessage = response.ErrorMessage;
        }
        catch (Exception ex)
        {
            ErrorMessage = $"An error occured: {ex.Message}";
        }
    }

    protected string CreateQueryString()
    {
        HashSet<string> parameters = [];

        if (!String.IsNullOrEmpty(FlightIATA)) parameters.Add($"flight_iata={FlightIATA}");
        if (!String.IsNullOrEmpty(DepartureIATA)) parameters.Add($"departures={DepartureIATA}");
        if (!String.IsNullOrEmpty(ArrivalIATA)) parameters.Add($"arrivals={ArrivalIATA}");
        if (!String.IsNullOrEmpty(Date)) parameters.Add($"date={Date}");
        if (PageNumber > 0) parameters.Add($"page_number={PageNumber}");
        if (PageSize > 0) parameters.Add($"page_size={PageSize}");

        return String.Join("&", parameters);
    }

    protected void ResetError()
    {
        ErrorMessage = "";
    }
}