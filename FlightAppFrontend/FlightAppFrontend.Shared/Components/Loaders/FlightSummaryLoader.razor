@using FlightAppFrontend.Shared.Components.Utility
@using FlightAppLibrary.Models.AircraftPhoto
@using FlightAppLibrary.Models.Response
@using FlightAppFrontend.Shared.Extensions
@using FlightAppFrontend.Shared.Pages
@using System.Text.Json
@inject IHttpClientFactory ClientFactory

@if(ErrorMessage != null)
{
    <ErrorMessage Message="@ErrorMessage"/>
}
else if(@FlightResponse == null)
{
    <Loading/>
}
else
{
    <FlightSummary FlightResponse="@FlightResponse" AircraftPhoto="@AircraftPhoto"/>
}

@code{
    [Parameter]
    public string? IATA { get; set; }

    protected FlightResponse? FlightResponse { get; set; }

    protected string? ErrorMessage;

    protected Photo? AircraftPhoto { get; set; }
    protected string PhotoErrorMessage { get; set;}

    protected override async Task OnInitializedAsync()
    {
        await GetFlightResponse();
        await GetPhoto();
    }

    protected async Task GetFlightResponse()
    {
        try
        {
            var client = ClientFactory.CreateClient("DirigibleApi");
            // var response = await client.GetValueAsync<FlightResponse>($"FlightApi/{IATA}");
            // FlightResponse = response.Value;
            // ErrorMessage = response.ErrorMessage;

            var response = JsonSerializer.Deserialize<FlightResponseWrapper>(File.ReadAllText("..\\..\\FlightApp\\test_flight_json.json")).Data;

            FlightResponse = response[0];
        }
        catch(Exception ex)
        {
            ErrorMessage = $"An error occured: {ex.Message}";
        }
    }

    protected async Task GetPhoto()
    {
        if(FlightResponse != null)
        {
            try
            {
                var client = ClientFactory.CreateClient("AircraftPhotos");

                var photoResponse = await client.GetValueAsync<PhotosArray>($"{FlightResponse.Aircraft.Registration}");


                AircraftPhoto = photoResponse.Value.Photos[0];
                PhotoErrorMessage = photoResponse.ErrorMessage;

            }
            catch (Exception ex)
            {
                AircraftPhoto = null;
            }
        }
        else
        {
            AircraftPhoto = null;
        }
    }


}